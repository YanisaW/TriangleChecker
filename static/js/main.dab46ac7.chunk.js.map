{"version":3,"sources":["logo.svg","fonts/LemonMilkMedium-mLZYV.otf","serviceWorker.js","index.js","App.js"],"names":["module","exports","Boolean","window","location","hostname","match","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","initialState","side_1","side_2","side_3","result","err1","err2","err3","field","props","handleChangeComplete","color","setState","background","hex","Validation","state","resetForm","handleChange","bind","handleClick","e","this","target","name","value","event","preventDefault","isValid","a","eval","b","c","className","style","fontSize","fontWeight","ref","form","foem","type","placeholder","required","onChange","id","onClick","React","Component"],"mappings":"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","file":"static/js/main.dab46ac7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/LemonMilkMedium-mLZYV.51cab81e.otf\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n//import { SketchPicker } from 'react-color';\nimport { Helmet } from 'react-helmet';\nimport './fonts/LemonMilkMedium-mLZYV.otf'\n\nconst initialState = {\n  side_1: \"\",\n  side_2: \"\",\n  side_3: \"\",\n  result: \"\",\n  err1: \"\",\n  err2: \"\",\n  err3: \"\",\n  field: {}\n}\n\n\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  \n  handleChange(e){\n    this.setState( { [e.target.name] : e.target.value} )\n  }\n\n  handleChangeComplete = (color) => {\n    this.setState({ background: color.hex });\n  };\n\n  Validation = () => {\n    let err1 =  \"\";\n    let err2 =  \"\";\n    let err3 =  \"\";\n    let field = this.state.field; \n   \n\n\n    if(!this.state.side_1){\n     \n      err1 = 'cannot be empty!';\n    }\n    if(this.state.side_1 !== \"\"){\n      if(this.state.side_1 <= 0){\n       \n        err1 = 'cannot be negative or zero';\n      }\n      if(this.state.side_1 > 100){\n        err1 = 'out of bound. max number is 100';\n      }\n    }\n\n    if(!this.state.side_2){\n      err2 = 'cannot be empty!';\n    }\n    if(this.state.side_2 !== \"\"){\n      if(this.state.side_2 <= 0){\n       \n        err2 = 'cannot be negative or zero';\n      }\n      if(this.state.side_2 > 100){\n        err2 = 'out of bound. max number is 100';\n      }\n    }\n\n    if(!this.state.side_3){\n      err3 = 'cannot be empty!';\n    }\n    if(this.state.side_3 !== \"\"){\n      if(this.state.side_3 <= 0){\n       \n        err3 = 'cannot be negative or zero';\n      }\n      if(this.state.side_3 > 100){\n        err3 = 'out of bound. max number is 100';\n      }\n    }\n\n    if(err1||err2||err3){\n      this.setState({err1});\n      this.setState({err2});\n      this.setState({err3});\n      return false;\n    }\n\n    return true;\n  };\n\n  resetForm = () =>{\n    \n    this.setState(initialState);\n  }\n  \n  handleClick(event) {\n    event.preventDefault();\n    const isValid = this.Validation();\n    var a = eval(this.state.side_1 * this.state.side_1)\n    var b = eval(this.state.side_2 * this.state.side_2)\n    var c = eval(this.state.side_3 * this.state.side_3)\n    \n    if(isValid){\n     \n      if((eval((this.state.side_1*1) + (this.state.side_2*1)) < (this.state.side_3*1))\n        || (eval((this.state.side_2*1) + (this.state.side_3*1)) < (this.state.side_1*1))\n        || (eval((this.state.side_1*1) + (this.state.side_3*1)) < (this.state.side_2*1))){\n          this.setState({result: \"[ Not a Triangle | เป็นสามเหลี่ยมไม่ได้ ]\"})\n        }\n\n        else if((this.state.side_1 === this.state.side_2) && (this.state.side_2 === this.state.side_3)){\n          this.setState({result: \"[ Equilateral Triangle | สามเหลี่ยมด้านเท่า ]\"})\n        }\n   \n        else if(((this.state.side_1 === this.state.side_2) && (this.state.side_1 !== this.state.side_3)) \n        || ((this.state.side_2 === this.state.side_3) && (this.state.side_2 !== this.state.side_1))\n        || ((this.state.side_1 === this.state.side_3) && (this.state.side_1 !== this.state.side_2))){\n          this.setState({result: \"[ Isosceles Triangle | สามเหลี่ยมหน้าจั่ว]\"})\n        }\n   \n        else if((a === eval(b+c)) || (b === eval(a+c)) || (c === eval(a+b))){\n          this.setState({result: \"[ Right Triangle | สามเหลี่ยมุมฉาก ]\"})\n        }\n  \n\n        else if((this.state.side_1 !== this.state.side_2) && (this.state.side_2 !== this.state.side_3) && (this.state.side_1 !== this.state.side_3) ){\n        this.setState({result: \"[ Scalene Triangle | สามเหลี่ยมด้านไม่เท่า]\"})\n        }\n  \n    }\n    \n  \n    \n    \n\n    event.preventDefault();\n  }\n\n  \n  render() {\n    \n    return (\n      \n      \n\n      <div className=\"App\">\n\n        <Helmet>\n          <title>Three Angle</title>\n        </Helmet>\n        \n        <br></br>\n        <text style={{fontSize:50,color: \"#FFFAE9\",fontWeight:1000}}>Three Angle</text>\n        <br></br>\n        <text style= {{fontSize : 28}}>Enter the length of sides</text>\n        <br></br>--ensure that your fill the number again after you clicked reset button--\n        <form ref={form => this.foem = form}>\n\n          <label >\n            <br></br>\n            <t>Side1   : </t> \n            <input \n            type = \"number\" \n            name = \"side_1\"\n            placeholder=\"Enter Number\" \n            required\n            value={this.state.field[\"side_1\"]}\n            side_1 ={this.state.side_1}\n            onChange={this.handleChange} /> \n            <div style={{fontSize: 15,color:'red'}}>{this.state.err1}</div>\n          </label>\n          \n          \n\n          <label>\n            <br></br>\n            <t>Side2   : </t> \n            <input \n            type = \"number\" \n            name = \"side_2\"\n            placeholder=\"Enter Number\" \n            required\n            value={this.state.field[\"side_2\"]}\n            side_2 ={this.state.side_2} \n            onChange={this.handleChange} /> \n            <div style={{fontSize: 15,color:'red'}}>{this.state.err2}</div>\n          </label>\n\n         \n         \n          <label>\n            <br></br>\n            <t>Side3   : </t> \n            <input \n              type=\"number\" \n              name = \"side_3\"\n              placeholder=\"Enter Number\" \n              required\n              value={this.state.field[\"side_3\"]}\n              side_3 ={this.state.side_3} \n              onChange={this.handleChange} /> \n            <div style={{fontSize: 15,color:'red'}}>{this.state.err3}</div>\n          </label>\n\n          <br></br>\n\n          <button id = \"calculate\" type = \"button\" onClick = {this.handleClick} className = \"App\"> Calculate </button>\n          <button id = \"clear\" type = \"button\" onClick = {this.resetForm} className = \"App\"> Reset</button>\n\n        </form>\n        <label>\n            <br></br>\n            <t>Result   : </t><br></br> \n            \n           <label style= {{fontSize: 40,color: \"#FFFAE9\"}}>{this.state.result}</label>\n        </label>\n\n      \n\n      </div>\n\n      \n      \n    );\n  }\n}"],"sourceRoot":""}